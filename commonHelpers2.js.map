{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["// Importing flatpickr for date and time picking functionality\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Declare the countdownDate variable to store the selected date\nlet countdownDate = new Date();\n\n// Configuration options for flatpickr\nconst options = {\n  enableTime: true, // Enabling time selection\n  time_24hr: true, // 24-hour time format\n  defaultDate: new Date(), // Setting the default date to current date\n  minuteIncrement: 1, // Minute increment step\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    // Check if selected date is in the past\n    if (selectedDate < new Date()) {\n      startButton.disabled = true;\n      // Use iziToast for notification\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      // Enable the start button if the date is in the future\n      startButton.disabled = false;\n      countdownDate = selectedDate;\n    }\n  },\n};\n\n// Initialize flatpickr on the date-time picker input\nflatpickr('#datetime-picker', options);\n\n// Selecting HTML elements for manipulation\nconst startButton = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nconst timePicker = document.querySelector('#datetime-picker');\n\n// Event listener for the start button\nstartButton.addEventListener('click', startCountdown);\n\nstartButton.disabled = true;\n\n// Function to start the countdown\nfunction startCountdown() {\n  // Disable the start button and input to prevent multiple clicks\n  startButton.disabled = true;\n  timePicker.disabled = true;\n\n  // Set an interval to update the countdown every second\n  const timerId = setInterval(() => {\n    const currentTime = new Date();\n    const timeLeft = countdownDate - currentTime;\n    // Stop the timer when the countdown reaches zero\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      timePicker.disabled = false;\n      iziToast.info({ title: 'Finished', message: 'Countdown finished!' });\n      return;\n    }\n\n    // Calculate the time components and update the display\n    const timeComponents = convertMs(timeLeft);\n    updateTimerDisplay(timeComponents);\n  }, 1000);\n}\n\n// Function to update the timer display\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\n// Function to convert milliseconds into days, hours, minutes, and seconds\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Function to add a leading zero to numbers less than 10\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["countdownDate","options","selectedDates","selectedDate","startButton","iziToast","flatpickr","daysEl","hoursEl","minutesEl","secondsEl","timePicker","startCountdown","timerId","currentTime","timeLeft","timeComponents","convertMs","updateTimerDisplay","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"qIAOA,IAAIA,EAAgB,IAAI,KAGxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAE/BC,EAAe,IAAI,MACrBC,EAAY,SAAW,GAEvBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAO,IAGDD,EAAY,SAAW,GACvBJ,EAAgBG,EAEnB,CACH,EAGAG,EAAU,mBAAoBL,CAAO,EAGrC,MAAMG,EAAc,SAAS,cAAc,cAAc,EACnDG,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAa,SAAS,cAAc,kBAAkB,EAG5DP,EAAY,iBAAiB,QAASQ,CAAc,EAEpDR,EAAY,SAAW,GAGvB,SAASQ,GAAiB,CAExBR,EAAY,SAAW,GACvBO,EAAW,SAAW,GAGtB,MAAME,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAc,IAAI,KAClBC,EAAWf,EAAgBc,EAEjC,GAAIC,GAAY,EAAG,CACjB,cAAcF,CAAO,EACrBF,EAAW,SAAW,GACtBN,EAAS,KAAK,CAAE,MAAO,WAAY,QAAS,qBAAqB,CAAE,EACnE,MACD,CAGD,MAAMW,EAAiBC,EAAUF,CAAQ,EACzCG,EAAmBF,CAAc,CAClC,EAAE,GAAI,CACT,CAGA,SAASE,EAAmB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Df,EAAO,YAAcgB,EAAeJ,CAAI,EACxCX,EAAQ,YAAce,EAAeH,CAAK,EAC1CX,EAAU,YAAcc,EAAeF,CAAO,EAC9CX,EAAU,YAAca,EAAeD,CAAO,CAChD,CAGA,SAASL,EAAUO,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}